
// Positions can be world or local space, since world and normal
// matrices are identity for world vertex space materials.
// If world vertex space is selected, you can remove the
// normal matrix multiplication for optimal performance.

attribute highp vec4 position;
attribute mediump vec2 texcoord0;
attribute mediump vec3 normal;

uniform mediump mat4 mtx_worldview;
uniform mediump mat4 mtx_view;
uniform mediump mat4 mtx_proj;
uniform mediump mat4 mtx_normal;
uniform mediump vec4 light;
uniform mediump vec4 outline;
uniform mediump vec4 outline_color;
uniform mediump vec4 outline_width;

varying highp vec4 var_position;
varying mediump vec3 var_normal;
varying mediump vec2 var_texcoord0;
varying mediump vec4 var_light;

void main()
{
    vec4 p = vec4(position.xyz, 1.0);
    var_light = mtx_view * vec4(light.xyz, 1.0);
    var_texcoord0 = texcoord0;

    var_normal = normalize((mtx_normal * vec4(normal, 0.0)).xyz);
    
    p = vec4(p.xyz + var_normal * 1.9, 1.0);
    gl_Position = mtx_proj * (mtx_worldview * p) ;
}

