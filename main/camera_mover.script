local camera_smoothing_factor = 0.14
local camera_rotation_factor = 0.9
local camera_easing_difference_min = 0.01
local camera_base_zoom = 10
local camera_min_zoom = 1
local camera_max_zoom = 20

local function mod_zoom(self, amount)
	self.zoom = self.zoom + amount
	if self.zoom < camera_min_zoom then self.zoom = camera_min_zoom end
	if self.zoom > camera_max_zoom then self.zoom = camera_max_zoom end
	go.set_position(vmath.vector3(0,0,self.zoom), "zoom")
	print(self.zoom)
end


function init(self)
	msg.post(".", "acquire_input_focus")
	self.turn = vmath.vector3()
	self.turn_target = vmath.vector3()
	self.zoom = camera_base_zoom
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	if self.mouse_right_down and self.action.dx then
		self.turn.x = self.turn.x + self.action.dx * camera_rotation_factor * dt * 12
		self.turn.y = self.turn.y + self.action.dy * camera_rotation_factor * dt * 9
	end
	self.turn_target.x = self.turn_target.x + (self.turn.x - self.turn_target.x) * camera_smoothing_factor * dt * 10
	self.turn_target.y = self.turn_target.y + (self.turn.y - self.turn_target.y) * camera_smoothing_factor * dt * 10

	if math.abs(self.turn_target.x - self.turn.x) < camera_easing_difference_min then
		self.turn_target.x = self.turn.x
	end
	if math.abs(self.turn_target.y - self.turn.y) < camera_easing_difference_min then
		self.turn_target.y = self.turn.y
	end	
	
	go.set(".", "euler.x", self.turn_target.y)
	go.set(".", "euler.y", -self.turn_target.x)

end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Learn more: https://defold.com/manuals/message-passing/
	-- Remove this function if not needed
end

function on_input(self, action_id, action)
	if action_id == hash("mouse_right") then
		if action.pressed then
			self.mouse_right_down = true
		end
		if action.released then
			self.mouse_right_down = false
		end
	end
	self.action = action

	if action_id == hash("mouse_middle") and action.released then
		self.mouse_right_down = false
		self.turn.x = 0
		self.turn.y = 0
		go.set(".", "euler.x", 0)
		go.set(".", "euler.y", 0)
		self.zoom = camera_base_zoom
		go.set_position(vmath.vector3(0,0,self.zoom), "zoom")
	end

	if action_id == hash("mouse_wheel_up") then
		mod_zoom(self, -1)
	end

	if action_id == hash("mouse_wheel_down") then
		mod_zoom(self, 1)
	end
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
